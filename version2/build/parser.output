Terminals unused in grammar

   GOTO


State 149 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID SEMI routine_head routine_body DOT

    2 routine_head: const_part type_part var_part routine_part

    3 const_part: CONST const_expr_list
    4           | %empty

    5 const_expr_list: const_expr_list ID EQUAL const_value SEMI
    6                | ID EQUAL const_value SEMI

    7 const_value: INTEGER
    8            | REAL
    9            | CHAR
   10            | STRING
   11            | SYS_CON

   12 type_part: TYPE type_decl_list
   13          | %empty

   14 type_decl_list: type_decl_list type_definition
   15               | type_definition

   16 type_definition: ID EQUAL type_decl SEMI

   17 type_decl: simple_type_decl
   18          | array_type_decl

   19 simple_type_decl: SYS_TYPE
   20                 | ID
   21                 | string_type_decl
   22                 | record_type_decl

   23 array_type_decl: ARRAY LB array_range RB OF type_decl

   24 string_type_decl: STR_TYPE

   25 array_range: const_value DOTDOT const_value
   26            | ID DOTDOT ID

   27 record_type_decl: RECORD field_decl_list END

   28 field_decl_list: field_decl_list field_decl
   29                | field_decl

   30 field_decl: name_list COLON type_decl SEMI

   31 name_list: name_list COMMA ID
   32          | ID

   33 var_part: VAR var_decl_list
   34         | %empty

   35 var_decl_list: var_decl_list var_decl
   36              | var_decl

   37 var_decl: name_list COLON type_decl SEMI

   38 routine_part: routine_part function_decl
   39             | routine_part procedure_decl
   40             | %empty

   41 function_decl: FUNCTION ID parameters COLON simple_type_decl SEMI routine_head routine_body SEMI

   42 procedure_decl: PROCEDURE ID parameters SEMI routine_head routine_body SEMI

   43 parameters: LP para_decl_list RP
   44           | LP RP
   45           | %empty

   46 para_decl_list: para_decl_list SEMI para_type_list
   47               | para_type_list

   48 para_type_list: var_para_list COLON type_decl

   49 var_para_list: VAR name_list
   50              | name_list

   51 routine_body: compound_stmt

   52 compound_stmt: PBEGIN stmt_list END

   53 stmt_list: stmt_list stmt SEMI
   54          | %empty

   55 stmt: assign_stmt
   56     | proc_stmt
   57     | compound_stmt
   58     | if_stmt
   59     | repeat_stmt
   60     | while_stmt
   61     | for_stmt
   62     | case_stmt

   63 assign_stmt: left_expr ASSIGN expression

   64 proc_stmt: ID
   65          | ID LP RP
   66          | ID LP args_list RP
   67          | SYS_PROC LP RP
   68          | SYS_PROC
   69          | SYS_PROC LP args_list RP

   70 repeat_stmt: REPEAT stmt_list UNTIL expression

   71 while_stmt: WHILE expression DO stmt

   72 for_stmt: FOR ID ASSIGN expression direction expression DO stmt

   73 direction: TO
   74          | DOWNTO

   75 if_stmt: IF expression THEN stmt else_clause

   76 else_clause: ELSE stmt
   77            | %empty

   78 case_stmt: CASE expression OF case_expr_list END

   79 case_expr_list: case_expr_list case_expr
   80               | case_expr

   81 case_expr: const_value COLON stmt SEMI
   82          | ID COLON stmt SEMI

   83 expression: expression GE expr
   84           | expression GT expr
   85           | expression LE expr
   86           | expression LT expr
   87           | expression EQUAL expr
   88           | expression UNEQUAL expr
   89           | expr

   90 expr: expr PLUS term
   91     | expr MINUS term
   92     | expr OR term
   93     | expr XOR term
   94     | term

   95 term: term MUL factor
   96     | term DIV factor
   97     | term MOD factor
   98     | term AND factor
   99     | term TRUEDIV factor
  100     | factor

  101 factor: left_expr
  102       | ID LP args_list RP
  103       | ID LP RP
  104       | SYS_FUNCT LP args_list RP
  105       | const_value
  106       | LP expression RP
  107       | NOT factor
  108       | MINUS factor
  109       | PLUS factor

  110 left_expr: ID
  111          | left_expr LB expression RB
  112          | left_expr DOT ID

  113 args_list: args_list COMMA expression
  114          | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 1
ID (259) 1 5 6 16 20 26 31 32 41 42 64 65 66 72 82 102 103 110 112
CONST (260) 3
ARRAY (261) 23
VAR (262) 33 49
FUNCTION (263) 41
PROCEDURE (264) 42
PBEGIN (265) 52
END (266) 27 52 78
TYPE (267) 12
RECORD (268) 27
INTEGER (269) 7
REAL (270) 8
CHAR (271) 9
STRING (272) 10
SYS_CON (273) 11
SYS_FUNCT (274) 104
SYS_PROC (275) 67 68 69
SYS_TYPE (276) 19
STR_TYPE (277) 24
IF (278) 75
THEN (279) 75
ELSE (280) 76
REPEAT (281) 70
UNTIL (282) 70
WHILE (283) 71
DO (284) 71 72
FOR (285) 72
TO (286) 73
DOWNTO (287) 74
CASE (288) 78
OF (289) 23 78
GOTO (290)
ASSIGN (291) 63 72
EQUAL (292) 5 6 16 87
UNEQUAL (293) 88
LE (294) 85
LT (295) 86
GE (296) 83
GT (297) 84
PLUS (298) 90 109
MINUS (299) 91 108
MUL (300) 95
DIV (301) 96
MOD (302) 97
TRUEDIV (303) 99
AND (304) 98
OR (305) 92
XOR (306) 93
NOT (307) 107
DOT (308) 1 112
DOTDOT (309) 25 26
SEMI (310) 1 5 6 16 30 37 41 42 46 53 81 82
LP (311) 43 44 65 66 67 69 102 103 104 106
RP (312) 43 44 65 66 67 69 102 103 104 106
LB (313) 23 111
RB (314) 23 111
COMMA (315) 31 113
COLON (316) 30 37 41 48 81 82


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
program (63)
    on left: 1, on right: 0
routine_head (64)
    on left: 2, on right: 1 41 42
const_part (65)
    on left: 3 4, on right: 2
const_expr_list (66)
    on left: 5 6, on right: 3 5
const_value (67)
    on left: 7 8 9 10 11, on right: 5 6 25 81 105
type_part (68)
    on left: 12 13, on right: 2
type_decl_list (69)
    on left: 14 15, on right: 12 14
type_definition (70)
    on left: 16, on right: 14 15
type_decl (71)
    on left: 17 18, on right: 16 23 30 37 48
simple_type_decl (72)
    on left: 19 20 21 22, on right: 17 41
array_type_decl (73)
    on left: 23, on right: 18
string_type_decl (74)
    on left: 24, on right: 21
array_range (75)
    on left: 25 26, on right: 23
record_type_decl (76)
    on left: 27, on right: 22
field_decl_list (77)
    on left: 28 29, on right: 27 28
field_decl (78)
    on left: 30, on right: 28 29
name_list (79)
    on left: 31 32, on right: 30 31 37 49 50
var_part (80)
    on left: 33 34, on right: 2
var_decl_list (81)
    on left: 35 36, on right: 33 35
var_decl (82)
    on left: 37, on right: 35 36
routine_part (83)
    on left: 38 39 40, on right: 2 38 39
function_decl (84)
    on left: 41, on right: 38
procedure_decl (85)
    on left: 42, on right: 39
parameters (86)
    on left: 43 44 45, on right: 41 42
para_decl_list (87)
    on left: 46 47, on right: 43 46
para_type_list (88)
    on left: 48, on right: 46 47
var_para_list (89)
    on left: 49 50, on right: 48
routine_body (90)
    on left: 51, on right: 1 41 42
compound_stmt (91)
    on left: 52, on right: 51 57
stmt_list (92)
    on left: 53 54, on right: 52 53 70
stmt (93)
    on left: 55 56 57 58 59 60 61 62, on right: 53 71 72 75 76 81 82
assign_stmt (94)
    on left: 63, on right: 55
proc_stmt (95)
    on left: 64 65 66 67 68 69, on right: 56
repeat_stmt (96)
    on left: 70, on right: 59
while_stmt (97)
    on left: 71, on right: 60
for_stmt (98)
    on left: 72, on right: 61
direction (99)
    on left: 73 74, on right: 72
if_stmt (100)
    on left: 75, on right: 58
else_clause (101)
    on left: 76 77, on right: 75
case_stmt (102)
    on left: 78, on right: 62
case_expr_list (103)
    on left: 79 80, on right: 78 79
case_expr (104)
    on left: 81 82, on right: 79 80
expression (105)
    on left: 83 84 85 86 87 88 89, on right: 63 70 71 72 75 78 83 84
    85 86 87 88 106 111 113 114
expr (106)
    on left: 90 91 92 93 94, on right: 83 84 85 86 87 88 89 90 91 92
    93
term (107)
    on left: 95 96 97 98 99 100, on right: 90 91 92 93 94 95 96 97
    98 99
factor (108)
    on left: 101 102 103 104 105 106 107 108 109, on right: 95 96 97
    98 99 100 107 108 109
left_expr (109)
    on left: 110 111 112, on right: 63 101 111 112
args_list (110)
    on left: 113 114, on right: 66 69 102 104 113


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . ID SEMI routine_head routine_body DOT

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID . SEMI routine_head routine_body DOT

    SEMI  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM ID SEMI . routine_head routine_body DOT

    CONST  shift, and go to state 6

    $default  reduce using rule 4 (const_part)

    routine_head  go to state 7
    const_part    go to state 8


State 6

    3 const_part: CONST . const_expr_list

    ID  shift, and go to state 9

    const_expr_list  go to state 10


State 7

    1 program: PROGRAM ID SEMI routine_head . routine_body DOT

    PBEGIN  shift, and go to state 11

    routine_body   go to state 12
    compound_stmt  go to state 13


State 8

    2 routine_head: const_part . type_part var_part routine_part

    TYPE  shift, and go to state 14

    $default  reduce using rule 13 (type_part)

    type_part  go to state 15


State 9

    6 const_expr_list: ID . EQUAL const_value SEMI

    EQUAL  shift, and go to state 16


State 10

    3 const_part: CONST const_expr_list .
    5 const_expr_list: const_expr_list . ID EQUAL const_value SEMI

    ID  shift, and go to state 17

    $default  reduce using rule 3 (const_part)


State 11

   52 compound_stmt: PBEGIN . stmt_list END

    $default  reduce using rule 54 (stmt_list)

    stmt_list  go to state 18


State 12

    1 program: PROGRAM ID SEMI routine_head routine_body . DOT

    DOT  shift, and go to state 19


State 13

   51 routine_body: compound_stmt .

    $default  reduce using rule 51 (routine_body)


State 14

   12 type_part: TYPE . type_decl_list

    ID  shift, and go to state 20

    type_decl_list   go to state 21
    type_definition  go to state 22


State 15

    2 routine_head: const_part type_part . var_part routine_part

    VAR  shift, and go to state 23

    $default  reduce using rule 34 (var_part)

    var_part  go to state 24


State 16

    6 const_expr_list: ID EQUAL . const_value SEMI

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    CHAR     shift, and go to state 27
    STRING   shift, and go to state 28
    SYS_CON  shift, and go to state 29

    const_value  go to state 30


State 17

    5 const_expr_list: const_expr_list ID . EQUAL const_value SEMI

    EQUAL  shift, and go to state 31


State 18

   52 compound_stmt: PBEGIN stmt_list . END
   53 stmt_list: stmt_list . stmt SEMI

    ID        shift, and go to state 32
    PBEGIN    shift, and go to state 11
    END       shift, and go to state 33
    SYS_PROC  shift, and go to state 34
    IF        shift, and go to state 35
    REPEAT    shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    CASE      shift, and go to state 39

    compound_stmt  go to state 40
    stmt           go to state 41
    assign_stmt    go to state 42
    proc_stmt      go to state 43
    repeat_stmt    go to state 44
    while_stmt     go to state 45
    for_stmt       go to state 46
    if_stmt        go to state 47
    case_stmt      go to state 48
    left_expr      go to state 49


State 19

    1 program: PROGRAM ID SEMI routine_head routine_body DOT .

    $default  reduce using rule 1 (program)


State 20

   16 type_definition: ID . EQUAL type_decl SEMI

    EQUAL  shift, and go to state 50


State 21

   12 type_part: TYPE type_decl_list .
   14 type_decl_list: type_decl_list . type_definition

    ID  shift, and go to state 20

    $default  reduce using rule 12 (type_part)

    type_definition  go to state 51


State 22

   15 type_decl_list: type_definition .

    $default  reduce using rule 15 (type_decl_list)


State 23

   33 var_part: VAR . var_decl_list

    ID  shift, and go to state 52

    name_list      go to state 53
    var_decl_list  go to state 54
    var_decl       go to state 55


State 24

    2 routine_head: const_part type_part var_part . routine_part

    $default  reduce using rule 40 (routine_part)

    routine_part  go to state 56


State 25

    7 const_value: INTEGER .

    $default  reduce using rule 7 (const_value)


State 26

    8 const_value: REAL .

    $default  reduce using rule 8 (const_value)


State 27

    9 const_value: CHAR .

    $default  reduce using rule 9 (const_value)


State 28

   10 const_value: STRING .

    $default  reduce using rule 10 (const_value)


State 29

   11 const_value: SYS_CON .

    $default  reduce using rule 11 (const_value)


State 30

    6 const_expr_list: ID EQUAL const_value . SEMI

    SEMI  shift, and go to state 57


State 31

    5 const_expr_list: const_expr_list ID EQUAL . const_value SEMI

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    CHAR     shift, and go to state 27
    STRING   shift, and go to state 28
    SYS_CON  shift, and go to state 29

    const_value  go to state 58


State 32

   64 proc_stmt: ID .
   65          | ID . LP RP
   66          | ID . LP args_list RP
  110 left_expr: ID .

    LP  shift, and go to state 59

    ELSE      reduce using rule 64 (proc_stmt)
    SEMI      reduce using rule 64 (proc_stmt)
    $default  reduce using rule 110 (left_expr)


State 33

   52 compound_stmt: PBEGIN stmt_list END .

    $default  reduce using rule 52 (compound_stmt)


State 34

   67 proc_stmt: SYS_PROC . LP RP
   68          | SYS_PROC .
   69          | SYS_PROC . LP args_list RP

    LP  shift, and go to state 60

    $default  reduce using rule 68 (proc_stmt)


State 35

   75 if_stmt: IF . expression THEN stmt else_clause

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 68
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 36

   70 repeat_stmt: REPEAT . stmt_list UNTIL expression

    $default  reduce using rule 54 (stmt_list)

    stmt_list  go to state 73


State 37

   71 while_stmt: WHILE . expression DO stmt

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 74
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 38

   72 for_stmt: FOR . ID ASSIGN expression direction expression DO stmt

    ID  shift, and go to state 75


State 39

   78 case_stmt: CASE . expression OF case_expr_list END

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 76
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 40

   57 stmt: compound_stmt .

    $default  reduce using rule 57 (stmt)


State 41

   53 stmt_list: stmt_list stmt . SEMI

    SEMI  shift, and go to state 77


State 42

   55 stmt: assign_stmt .

    $default  reduce using rule 55 (stmt)


State 43

   56 stmt: proc_stmt .

    $default  reduce using rule 56 (stmt)


State 44

   59 stmt: repeat_stmt .

    $default  reduce using rule 59 (stmt)


State 45

   60 stmt: while_stmt .

    $default  reduce using rule 60 (stmt)


State 46

   61 stmt: for_stmt .

    $default  reduce using rule 61 (stmt)


State 47

   58 stmt: if_stmt .

    $default  reduce using rule 58 (stmt)


State 48

   62 stmt: case_stmt .

    $default  reduce using rule 62 (stmt)


State 49

   63 assign_stmt: left_expr . ASSIGN expression
  111 left_expr: left_expr . LB expression RB
  112          | left_expr . DOT ID

    ASSIGN  shift, and go to state 78
    DOT     shift, and go to state 79
    LB      shift, and go to state 80


State 50

   16 type_definition: ID EQUAL . type_decl SEMI

    ID        shift, and go to state 81
    ARRAY     shift, and go to state 82
    RECORD    shift, and go to state 83
    SYS_TYPE  shift, and go to state 84
    STR_TYPE  shift, and go to state 85

    type_decl         go to state 86
    simple_type_decl  go to state 87
    array_type_decl   go to state 88
    string_type_decl  go to state 89
    record_type_decl  go to state 90


State 51

   14 type_decl_list: type_decl_list type_definition .

    $default  reduce using rule 14 (type_decl_list)


State 52

   32 name_list: ID .

    $default  reduce using rule 32 (name_list)


State 53

   31 name_list: name_list . COMMA ID
   37 var_decl: name_list . COLON type_decl SEMI

    COMMA  shift, and go to state 91
    COLON  shift, and go to state 92


State 54

   33 var_part: VAR var_decl_list .
   35 var_decl_list: var_decl_list . var_decl

    ID  shift, and go to state 52

    $default  reduce using rule 33 (var_part)

    name_list  go to state 53
    var_decl   go to state 93


State 55

   36 var_decl_list: var_decl .

    $default  reduce using rule 36 (var_decl_list)


State 56

    2 routine_head: const_part type_part var_part routine_part .
   38 routine_part: routine_part . function_decl
   39             | routine_part . procedure_decl

    FUNCTION   shift, and go to state 94
    PROCEDURE  shift, and go to state 95

    $default  reduce using rule 2 (routine_head)

    function_decl   go to state 96
    procedure_decl  go to state 97


State 57

    6 const_expr_list: ID EQUAL const_value SEMI .

    $default  reduce using rule 6 (const_expr_list)


State 58

    5 const_expr_list: const_expr_list ID EQUAL const_value . SEMI

    SEMI  shift, and go to state 98


State 59

   65 proc_stmt: ID LP . RP
   66          | ID LP . args_list RP

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66
    RP         shift, and go to state 99

    const_value  go to state 67
    expression   go to state 100
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72
    args_list    go to state 101


State 60

   67 proc_stmt: SYS_PROC LP . RP
   69          | SYS_PROC LP . args_list RP

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66
    RP         shift, and go to state 102

    const_value  go to state 67
    expression   go to state 100
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72
    args_list    go to state 103


State 61

  102 factor: ID . LP args_list RP
  103       | ID . LP RP
  110 left_expr: ID .

    LP  shift, and go to state 104

    $default  reduce using rule 110 (left_expr)


State 62

  104 factor: SYS_FUNCT . LP args_list RP

    LP  shift, and go to state 105


State 63

  109 factor: PLUS . factor

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    factor       go to state 106
    left_expr    go to state 72


State 64

  108 factor: MINUS . factor

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    factor       go to state 107
    left_expr    go to state 72


State 65

  107 factor: NOT . factor

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    factor       go to state 108
    left_expr    go to state 72


State 66

  106 factor: LP . expression RP

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 109
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 67

  105 factor: const_value .

    $default  reduce using rule 105 (factor)


State 68

   75 if_stmt: IF expression . THEN stmt else_clause
   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr

    THEN     shift, and go to state 110
    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116


State 69

   89 expression: expr .
   90 expr: expr . PLUS term
   91     | expr . MINUS term
   92     | expr . OR term
   93     | expr . XOR term

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    OR     shift, and go to state 119
    XOR    shift, and go to state 120

    $default  reduce using rule 89 (expression)


State 70

   94 expr: term .
   95 term: term . MUL factor
   96     | term . DIV factor
   97     | term . MOD factor
   98     | term . AND factor
   99     | term . TRUEDIV factor

    MUL      shift, and go to state 121
    DIV      shift, and go to state 122
    MOD      shift, and go to state 123
    TRUEDIV  shift, and go to state 124
    AND      shift, and go to state 125

    $default  reduce using rule 94 (expr)


State 71

  100 term: factor .

    $default  reduce using rule 100 (term)


State 72

  101 factor: left_expr .
  111 left_expr: left_expr . LB expression RB
  112          | left_expr . DOT ID

    DOT  shift, and go to state 79
    LB   shift, and go to state 80

    $default  reduce using rule 101 (factor)


State 73

   53 stmt_list: stmt_list . stmt SEMI
   70 repeat_stmt: REPEAT stmt_list . UNTIL expression

    ID        shift, and go to state 32
    PBEGIN    shift, and go to state 11
    SYS_PROC  shift, and go to state 34
    IF        shift, and go to state 35
    REPEAT    shift, and go to state 36
    UNTIL     shift, and go to state 126
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    CASE      shift, and go to state 39

    compound_stmt  go to state 40
    stmt           go to state 41
    assign_stmt    go to state 42
    proc_stmt      go to state 43
    repeat_stmt    go to state 44
    while_stmt     go to state 45
    for_stmt       go to state 46
    if_stmt        go to state 47
    case_stmt      go to state 48
    left_expr      go to state 49


State 74

   71 while_stmt: WHILE expression . DO stmt
   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr

    DO       shift, and go to state 127
    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116


State 75

   72 for_stmt: FOR ID . ASSIGN expression direction expression DO stmt

    ASSIGN  shift, and go to state 128


State 76

   78 case_stmt: CASE expression . OF case_expr_list END
   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr

    OF       shift, and go to state 129
    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116


State 77

   53 stmt_list: stmt_list stmt SEMI .

    $default  reduce using rule 53 (stmt_list)


State 78

   63 assign_stmt: left_expr ASSIGN . expression

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 130
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 79

  112 left_expr: left_expr DOT . ID

    ID  shift, and go to state 131


State 80

  111 left_expr: left_expr LB . expression RB

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 132
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 81

   20 simple_type_decl: ID .

    $default  reduce using rule 20 (simple_type_decl)


State 82

   23 array_type_decl: ARRAY . LB array_range RB OF type_decl

    LB  shift, and go to state 133


State 83

   27 record_type_decl: RECORD . field_decl_list END

    ID  shift, and go to state 52

    field_decl_list  go to state 134
    field_decl       go to state 135
    name_list        go to state 136


State 84

   19 simple_type_decl: SYS_TYPE .

    $default  reduce using rule 19 (simple_type_decl)


State 85

   24 string_type_decl: STR_TYPE .

    $default  reduce using rule 24 (string_type_decl)


State 86

   16 type_definition: ID EQUAL type_decl . SEMI

    SEMI  shift, and go to state 137


State 87

   17 type_decl: simple_type_decl .

    $default  reduce using rule 17 (type_decl)


State 88

   18 type_decl: array_type_decl .

    $default  reduce using rule 18 (type_decl)


State 89

   21 simple_type_decl: string_type_decl .

    $default  reduce using rule 21 (simple_type_decl)


State 90

   22 simple_type_decl: record_type_decl .

    $default  reduce using rule 22 (simple_type_decl)


State 91

   31 name_list: name_list COMMA . ID

    ID  shift, and go to state 138


State 92

   37 var_decl: name_list COLON . type_decl SEMI

    ID        shift, and go to state 81
    ARRAY     shift, and go to state 82
    RECORD    shift, and go to state 83
    SYS_TYPE  shift, and go to state 84
    STR_TYPE  shift, and go to state 85

    type_decl         go to state 139
    simple_type_decl  go to state 87
    array_type_decl   go to state 88
    string_type_decl  go to state 89
    record_type_decl  go to state 90


State 93

   35 var_decl_list: var_decl_list var_decl .

    $default  reduce using rule 35 (var_decl_list)


State 94

   41 function_decl: FUNCTION . ID parameters COLON simple_type_decl SEMI routine_head routine_body SEMI

    ID  shift, and go to state 140


State 95

   42 procedure_decl: PROCEDURE . ID parameters SEMI routine_head routine_body SEMI

    ID  shift, and go to state 141


State 96

   38 routine_part: routine_part function_decl .

    $default  reduce using rule 38 (routine_part)


State 97

   39 routine_part: routine_part procedure_decl .

    $default  reduce using rule 39 (routine_part)


State 98

    5 const_expr_list: const_expr_list ID EQUAL const_value SEMI .

    $default  reduce using rule 5 (const_expr_list)


State 99

   65 proc_stmt: ID LP RP .

    $default  reduce using rule 65 (proc_stmt)


State 100

   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr
  114 args_list: expression .

    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116

    $default  reduce using rule 114 (args_list)


State 101

   66 proc_stmt: ID LP args_list . RP
  113 args_list: args_list . COMMA expression

    RP     shift, and go to state 142
    COMMA  shift, and go to state 143


State 102

   67 proc_stmt: SYS_PROC LP RP .

    $default  reduce using rule 67 (proc_stmt)


State 103

   69 proc_stmt: SYS_PROC LP args_list . RP
  113 args_list: args_list . COMMA expression

    RP     shift, and go to state 144
    COMMA  shift, and go to state 143


State 104

  102 factor: ID LP . args_list RP
  103       | ID LP . RP

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66
    RP         shift, and go to state 145

    const_value  go to state 67
    expression   go to state 100
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72
    args_list    go to state 146


State 105

  104 factor: SYS_FUNCT LP . args_list RP

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 100
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72
    args_list    go to state 147


State 106

  109 factor: PLUS factor .

    $default  reduce using rule 109 (factor)


State 107

  108 factor: MINUS factor .

    $default  reduce using rule 108 (factor)


State 108

  107 factor: NOT factor .

    $default  reduce using rule 107 (factor)


State 109

   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr
  106 factor: LP expression . RP

    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116
    RP       shift, and go to state 148


State 110

   75 if_stmt: IF expression THEN . stmt else_clause

    ID        shift, and go to state 32
    PBEGIN    shift, and go to state 11
    SYS_PROC  shift, and go to state 34
    IF        shift, and go to state 35
    REPEAT    shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    CASE      shift, and go to state 39

    compound_stmt  go to state 40
    stmt           go to state 149
    assign_stmt    go to state 42
    proc_stmt      go to state 43
    repeat_stmt    go to state 44
    while_stmt     go to state 45
    for_stmt       go to state 46
    if_stmt        go to state 47
    case_stmt      go to state 48
    left_expr      go to state 49


State 111

   87 expression: expression EQUAL . expr

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expr         go to state 150
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 112

   88 expression: expression UNEQUAL . expr

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expr         go to state 151
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 113

   85 expression: expression LE . expr

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expr         go to state 152
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 114

   86 expression: expression LT . expr

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expr         go to state 153
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 115

   83 expression: expression GE . expr

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expr         go to state 154
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 116

   84 expression: expression GT . expr

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expr         go to state 155
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 117

   90 expr: expr PLUS . term

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    term         go to state 156
    factor       go to state 71
    left_expr    go to state 72


State 118

   91 expr: expr MINUS . term

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    term         go to state 157
    factor       go to state 71
    left_expr    go to state 72


State 119

   92 expr: expr OR . term

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    term         go to state 158
    factor       go to state 71
    left_expr    go to state 72


State 120

   93 expr: expr XOR . term

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    term         go to state 159
    factor       go to state 71
    left_expr    go to state 72


State 121

   95 term: term MUL . factor

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    factor       go to state 160
    left_expr    go to state 72


State 122

   96 term: term DIV . factor

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    factor       go to state 161
    left_expr    go to state 72


State 123

   97 term: term MOD . factor

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    factor       go to state 162
    left_expr    go to state 72


State 124

   99 term: term TRUEDIV . factor

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    factor       go to state 163
    left_expr    go to state 72


State 125

   98 term: term AND . factor

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    factor       go to state 164
    left_expr    go to state 72


State 126

   70 repeat_stmt: REPEAT stmt_list UNTIL . expression

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 165
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 127

   71 while_stmt: WHILE expression DO . stmt

    ID        shift, and go to state 32
    PBEGIN    shift, and go to state 11
    SYS_PROC  shift, and go to state 34
    IF        shift, and go to state 35
    REPEAT    shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    CASE      shift, and go to state 39

    compound_stmt  go to state 40
    stmt           go to state 166
    assign_stmt    go to state 42
    proc_stmt      go to state 43
    repeat_stmt    go to state 44
    while_stmt     go to state 45
    for_stmt       go to state 46
    if_stmt        go to state 47
    case_stmt      go to state 48
    left_expr      go to state 49


State 128

   72 for_stmt: FOR ID ASSIGN . expression direction expression DO stmt

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 167
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 129

   78 case_stmt: CASE expression OF . case_expr_list END

    ID       shift, and go to state 168
    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    CHAR     shift, and go to state 27
    STRING   shift, and go to state 28
    SYS_CON  shift, and go to state 29

    const_value     go to state 169
    case_expr_list  go to state 170
    case_expr       go to state 171


State 130

   63 assign_stmt: left_expr ASSIGN expression .
   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116

    $default  reduce using rule 63 (assign_stmt)


State 131

  112 left_expr: left_expr DOT ID .

    $default  reduce using rule 112 (left_expr)


State 132

   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr
  111 left_expr: left_expr LB expression . RB

    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116
    RB       shift, and go to state 172


State 133

   23 array_type_decl: ARRAY LB . array_range RB OF type_decl

    ID       shift, and go to state 173
    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    CHAR     shift, and go to state 27
    STRING   shift, and go to state 28
    SYS_CON  shift, and go to state 29

    const_value  go to state 174
    array_range  go to state 175


State 134

   27 record_type_decl: RECORD field_decl_list . END
   28 field_decl_list: field_decl_list . field_decl

    ID   shift, and go to state 52
    END  shift, and go to state 176

    field_decl  go to state 177
    name_list   go to state 136


State 135

   29 field_decl_list: field_decl .

    $default  reduce using rule 29 (field_decl_list)


State 136

   30 field_decl: name_list . COLON type_decl SEMI
   31 name_list: name_list . COMMA ID

    COMMA  shift, and go to state 91
    COLON  shift, and go to state 178


State 137

   16 type_definition: ID EQUAL type_decl SEMI .

    $default  reduce using rule 16 (type_definition)


State 138

   31 name_list: name_list COMMA ID .

    $default  reduce using rule 31 (name_list)


State 139

   37 var_decl: name_list COLON type_decl . SEMI

    SEMI  shift, and go to state 179


State 140

   41 function_decl: FUNCTION ID . parameters COLON simple_type_decl SEMI routine_head routine_body SEMI

    LP  shift, and go to state 180

    $default  reduce using rule 45 (parameters)

    parameters  go to state 181


State 141

   42 procedure_decl: PROCEDURE ID . parameters SEMI routine_head routine_body SEMI

    LP  shift, and go to state 180

    $default  reduce using rule 45 (parameters)

    parameters  go to state 182


State 142

   66 proc_stmt: ID LP args_list RP .

    $default  reduce using rule 66 (proc_stmt)


State 143

  113 args_list: args_list COMMA . expression

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 183
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 144

   69 proc_stmt: SYS_PROC LP args_list RP .

    $default  reduce using rule 69 (proc_stmt)


State 145

  103 factor: ID LP RP .

    $default  reduce using rule 103 (factor)


State 146

  102 factor: ID LP args_list . RP
  113 args_list: args_list . COMMA expression

    RP     shift, and go to state 184
    COMMA  shift, and go to state 143


State 147

  104 factor: SYS_FUNCT LP args_list . RP
  113 args_list: args_list . COMMA expression

    RP     shift, and go to state 185
    COMMA  shift, and go to state 143


State 148

  106 factor: LP expression RP .

    $default  reduce using rule 106 (factor)


State 149

   75 if_stmt: IF expression THEN stmt . else_clause

    ELSE  shift, and go to state 186

    ELSE      [reduce using rule 77 (else_clause)]
    $default  reduce using rule 77 (else_clause)

    else_clause  go to state 187


State 150

   87 expression: expression EQUAL expr .
   90 expr: expr . PLUS term
   91     | expr . MINUS term
   92     | expr . OR term
   93     | expr . XOR term

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    OR     shift, and go to state 119
    XOR    shift, and go to state 120

    $default  reduce using rule 87 (expression)


State 151

   88 expression: expression UNEQUAL expr .
   90 expr: expr . PLUS term
   91     | expr . MINUS term
   92     | expr . OR term
   93     | expr . XOR term

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    OR     shift, and go to state 119
    XOR    shift, and go to state 120

    $default  reduce using rule 88 (expression)


State 152

   85 expression: expression LE expr .
   90 expr: expr . PLUS term
   91     | expr . MINUS term
   92     | expr . OR term
   93     | expr . XOR term

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    OR     shift, and go to state 119
    XOR    shift, and go to state 120

    $default  reduce using rule 85 (expression)


State 153

   86 expression: expression LT expr .
   90 expr: expr . PLUS term
   91     | expr . MINUS term
   92     | expr . OR term
   93     | expr . XOR term

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    OR     shift, and go to state 119
    XOR    shift, and go to state 120

    $default  reduce using rule 86 (expression)


State 154

   83 expression: expression GE expr .
   90 expr: expr . PLUS term
   91     | expr . MINUS term
   92     | expr . OR term
   93     | expr . XOR term

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    OR     shift, and go to state 119
    XOR    shift, and go to state 120

    $default  reduce using rule 83 (expression)


State 155

   84 expression: expression GT expr .
   90 expr: expr . PLUS term
   91     | expr . MINUS term
   92     | expr . OR term
   93     | expr . XOR term

    PLUS   shift, and go to state 117
    MINUS  shift, and go to state 118
    OR     shift, and go to state 119
    XOR    shift, and go to state 120

    $default  reduce using rule 84 (expression)


State 156

   90 expr: expr PLUS term .
   95 term: term . MUL factor
   96     | term . DIV factor
   97     | term . MOD factor
   98     | term . AND factor
   99     | term . TRUEDIV factor

    MUL      shift, and go to state 121
    DIV      shift, and go to state 122
    MOD      shift, and go to state 123
    TRUEDIV  shift, and go to state 124
    AND      shift, and go to state 125

    $default  reduce using rule 90 (expr)


State 157

   91 expr: expr MINUS term .
   95 term: term . MUL factor
   96     | term . DIV factor
   97     | term . MOD factor
   98     | term . AND factor
   99     | term . TRUEDIV factor

    MUL      shift, and go to state 121
    DIV      shift, and go to state 122
    MOD      shift, and go to state 123
    TRUEDIV  shift, and go to state 124
    AND      shift, and go to state 125

    $default  reduce using rule 91 (expr)


State 158

   92 expr: expr OR term .
   95 term: term . MUL factor
   96     | term . DIV factor
   97     | term . MOD factor
   98     | term . AND factor
   99     | term . TRUEDIV factor

    MUL      shift, and go to state 121
    DIV      shift, and go to state 122
    MOD      shift, and go to state 123
    TRUEDIV  shift, and go to state 124
    AND      shift, and go to state 125

    $default  reduce using rule 92 (expr)


State 159

   93 expr: expr XOR term .
   95 term: term . MUL factor
   96     | term . DIV factor
   97     | term . MOD factor
   98     | term . AND factor
   99     | term . TRUEDIV factor

    MUL      shift, and go to state 121
    DIV      shift, and go to state 122
    MOD      shift, and go to state 123
    TRUEDIV  shift, and go to state 124
    AND      shift, and go to state 125

    $default  reduce using rule 93 (expr)


State 160

   95 term: term MUL factor .

    $default  reduce using rule 95 (term)


State 161

   96 term: term DIV factor .

    $default  reduce using rule 96 (term)


State 162

   97 term: term MOD factor .

    $default  reduce using rule 97 (term)


State 163

   99 term: term TRUEDIV factor .

    $default  reduce using rule 99 (term)


State 164

   98 term: term AND factor .

    $default  reduce using rule 98 (term)


State 165

   70 repeat_stmt: REPEAT stmt_list UNTIL expression .
   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116

    $default  reduce using rule 70 (repeat_stmt)


State 166

   71 while_stmt: WHILE expression DO stmt .

    $default  reduce using rule 71 (while_stmt)


State 167

   72 for_stmt: FOR ID ASSIGN expression . direction expression DO stmt
   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr

    TO       shift, and go to state 188
    DOWNTO   shift, and go to state 189
    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116

    direction  go to state 190


State 168

   82 case_expr: ID . COLON stmt SEMI

    COLON  shift, and go to state 191


State 169

   81 case_expr: const_value . COLON stmt SEMI

    COLON  shift, and go to state 192


State 170

   78 case_stmt: CASE expression OF case_expr_list . END
   79 case_expr_list: case_expr_list . case_expr

    ID       shift, and go to state 168
    END      shift, and go to state 193
    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    CHAR     shift, and go to state 27
    STRING   shift, and go to state 28
    SYS_CON  shift, and go to state 29

    const_value  go to state 169
    case_expr    go to state 194


State 171

   80 case_expr_list: case_expr .

    $default  reduce using rule 80 (case_expr_list)


State 172

  111 left_expr: left_expr LB expression RB .

    $default  reduce using rule 111 (left_expr)


State 173

   26 array_range: ID . DOTDOT ID

    DOTDOT  shift, and go to state 195


State 174

   25 array_range: const_value . DOTDOT const_value

    DOTDOT  shift, and go to state 196


State 175

   23 array_type_decl: ARRAY LB array_range . RB OF type_decl

    RB  shift, and go to state 197


State 176

   27 record_type_decl: RECORD field_decl_list END .

    $default  reduce using rule 27 (record_type_decl)


State 177

   28 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 28 (field_decl_list)


State 178

   30 field_decl: name_list COLON . type_decl SEMI

    ID        shift, and go to state 81
    ARRAY     shift, and go to state 82
    RECORD    shift, and go to state 83
    SYS_TYPE  shift, and go to state 84
    STR_TYPE  shift, and go to state 85

    type_decl         go to state 198
    simple_type_decl  go to state 87
    array_type_decl   go to state 88
    string_type_decl  go to state 89
    record_type_decl  go to state 90


State 179

   37 var_decl: name_list COLON type_decl SEMI .

    $default  reduce using rule 37 (var_decl)


State 180

   43 parameters: LP . para_decl_list RP
   44           | LP . RP

    ID   shift, and go to state 52
    VAR  shift, and go to state 199
    RP   shift, and go to state 200

    name_list       go to state 201
    para_decl_list  go to state 202
    para_type_list  go to state 203
    var_para_list   go to state 204


State 181

   41 function_decl: FUNCTION ID parameters . COLON simple_type_decl SEMI routine_head routine_body SEMI

    COLON  shift, and go to state 205


State 182

   42 procedure_decl: PROCEDURE ID parameters . SEMI routine_head routine_body SEMI

    SEMI  shift, and go to state 206


State 183

   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr
  113 args_list: args_list COMMA expression .

    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116

    $default  reduce using rule 113 (args_list)


State 184

  102 factor: ID LP args_list RP .

    $default  reduce using rule 102 (factor)


State 185

  104 factor: SYS_FUNCT LP args_list RP .

    $default  reduce using rule 104 (factor)


State 186

   76 else_clause: ELSE . stmt

    ID        shift, and go to state 32
    PBEGIN    shift, and go to state 11
    SYS_PROC  shift, and go to state 34
    IF        shift, and go to state 35
    REPEAT    shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    CASE      shift, and go to state 39

    compound_stmt  go to state 40
    stmt           go to state 207
    assign_stmt    go to state 42
    proc_stmt      go to state 43
    repeat_stmt    go to state 44
    while_stmt     go to state 45
    for_stmt       go to state 46
    if_stmt        go to state 47
    case_stmt      go to state 48
    left_expr      go to state 49


State 187

   75 if_stmt: IF expression THEN stmt else_clause .

    $default  reduce using rule 75 (if_stmt)


State 188

   73 direction: TO .

    $default  reduce using rule 73 (direction)


State 189

   74 direction: DOWNTO .

    $default  reduce using rule 74 (direction)


State 190

   72 for_stmt: FOR ID ASSIGN expression direction . expression DO stmt

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26
    CHAR       shift, and go to state 27
    STRING     shift, and go to state 28
    SYS_CON    shift, and go to state 29
    SYS_FUNCT  shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    NOT        shift, and go to state 65
    LP         shift, and go to state 66

    const_value  go to state 67
    expression   go to state 208
    expr         go to state 69
    term         go to state 70
    factor       go to state 71
    left_expr    go to state 72


State 191

   82 case_expr: ID COLON . stmt SEMI

    ID        shift, and go to state 32
    PBEGIN    shift, and go to state 11
    SYS_PROC  shift, and go to state 34
    IF        shift, and go to state 35
    REPEAT    shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    CASE      shift, and go to state 39

    compound_stmt  go to state 40
    stmt           go to state 209
    assign_stmt    go to state 42
    proc_stmt      go to state 43
    repeat_stmt    go to state 44
    while_stmt     go to state 45
    for_stmt       go to state 46
    if_stmt        go to state 47
    case_stmt      go to state 48
    left_expr      go to state 49


State 192

   81 case_expr: const_value COLON . stmt SEMI

    ID        shift, and go to state 32
    PBEGIN    shift, and go to state 11
    SYS_PROC  shift, and go to state 34
    IF        shift, and go to state 35
    REPEAT    shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    CASE      shift, and go to state 39

    compound_stmt  go to state 40
    stmt           go to state 210
    assign_stmt    go to state 42
    proc_stmt      go to state 43
    repeat_stmt    go to state 44
    while_stmt     go to state 45
    for_stmt       go to state 46
    if_stmt        go to state 47
    case_stmt      go to state 48
    left_expr      go to state 49


State 193

   78 case_stmt: CASE expression OF case_expr_list END .

    $default  reduce using rule 78 (case_stmt)


State 194

   79 case_expr_list: case_expr_list case_expr .

    $default  reduce using rule 79 (case_expr_list)


State 195

   26 array_range: ID DOTDOT . ID

    ID  shift, and go to state 211


State 196

   25 array_range: const_value DOTDOT . const_value

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    CHAR     shift, and go to state 27
    STRING   shift, and go to state 28
    SYS_CON  shift, and go to state 29

    const_value  go to state 212


State 197

   23 array_type_decl: ARRAY LB array_range RB . OF type_decl

    OF  shift, and go to state 213


State 198

   30 field_decl: name_list COLON type_decl . SEMI

    SEMI  shift, and go to state 214


State 199

   49 var_para_list: VAR . name_list

    ID  shift, and go to state 52

    name_list  go to state 215


State 200

   44 parameters: LP RP .

    $default  reduce using rule 44 (parameters)


State 201

   31 name_list: name_list . COMMA ID
   50 var_para_list: name_list .

    COMMA  shift, and go to state 91

    $default  reduce using rule 50 (var_para_list)


State 202

   43 parameters: LP para_decl_list . RP
   46 para_decl_list: para_decl_list . SEMI para_type_list

    SEMI  shift, and go to state 216
    RP    shift, and go to state 217


State 203

   47 para_decl_list: para_type_list .

    $default  reduce using rule 47 (para_decl_list)


State 204

   48 para_type_list: var_para_list . COLON type_decl

    COLON  shift, and go to state 218


State 205

   41 function_decl: FUNCTION ID parameters COLON . simple_type_decl SEMI routine_head routine_body SEMI

    ID        shift, and go to state 81
    RECORD    shift, and go to state 83
    SYS_TYPE  shift, and go to state 84
    STR_TYPE  shift, and go to state 85

    simple_type_decl  go to state 219
    string_type_decl  go to state 89
    record_type_decl  go to state 90


State 206

   42 procedure_decl: PROCEDURE ID parameters SEMI . routine_head routine_body SEMI

    CONST  shift, and go to state 6

    $default  reduce using rule 4 (const_part)

    routine_head  go to state 220
    const_part    go to state 8


State 207

   76 else_clause: ELSE stmt .

    $default  reduce using rule 76 (else_clause)


State 208

   72 for_stmt: FOR ID ASSIGN expression direction expression . DO stmt
   83 expression: expression . GE expr
   84           | expression . GT expr
   85           | expression . LE expr
   86           | expression . LT expr
   87           | expression . EQUAL expr
   88           | expression . UNEQUAL expr

    DO       shift, and go to state 221
    EQUAL    shift, and go to state 111
    UNEQUAL  shift, and go to state 112
    LE       shift, and go to state 113
    LT       shift, and go to state 114
    GE       shift, and go to state 115
    GT       shift, and go to state 116


State 209

   82 case_expr: ID COLON stmt . SEMI

    SEMI  shift, and go to state 222


State 210

   81 case_expr: const_value COLON stmt . SEMI

    SEMI  shift, and go to state 223


State 211

   26 array_range: ID DOTDOT ID .

    $default  reduce using rule 26 (array_range)


State 212

   25 array_range: const_value DOTDOT const_value .

    $default  reduce using rule 25 (array_range)


State 213

   23 array_type_decl: ARRAY LB array_range RB OF . type_decl

    ID        shift, and go to state 81
    ARRAY     shift, and go to state 82
    RECORD    shift, and go to state 83
    SYS_TYPE  shift, and go to state 84
    STR_TYPE  shift, and go to state 85

    type_decl         go to state 224
    simple_type_decl  go to state 87
    array_type_decl   go to state 88
    string_type_decl  go to state 89
    record_type_decl  go to state 90


State 214

   30 field_decl: name_list COLON type_decl SEMI .

    $default  reduce using rule 30 (field_decl)


State 215

   31 name_list: name_list . COMMA ID
   49 var_para_list: VAR name_list .

    COMMA  shift, and go to state 91

    $default  reduce using rule 49 (var_para_list)


State 216

   46 para_decl_list: para_decl_list SEMI . para_type_list

    ID   shift, and go to state 52
    VAR  shift, and go to state 199

    name_list       go to state 201
    para_type_list  go to state 225
    var_para_list   go to state 204


State 217

   43 parameters: LP para_decl_list RP .

    $default  reduce using rule 43 (parameters)


State 218

   48 para_type_list: var_para_list COLON . type_decl

    ID        shift, and go to state 81
    ARRAY     shift, and go to state 82
    RECORD    shift, and go to state 83
    SYS_TYPE  shift, and go to state 84
    STR_TYPE  shift, and go to state 85

    type_decl         go to state 226
    simple_type_decl  go to state 87
    array_type_decl   go to state 88
    string_type_decl  go to state 89
    record_type_decl  go to state 90


State 219

   41 function_decl: FUNCTION ID parameters COLON simple_type_decl . SEMI routine_head routine_body SEMI

    SEMI  shift, and go to state 227


State 220

   42 procedure_decl: PROCEDURE ID parameters SEMI routine_head . routine_body SEMI

    PBEGIN  shift, and go to state 11

    routine_body   go to state 228
    compound_stmt  go to state 13


State 221

   72 for_stmt: FOR ID ASSIGN expression direction expression DO . stmt

    ID        shift, and go to state 32
    PBEGIN    shift, and go to state 11
    SYS_PROC  shift, and go to state 34
    IF        shift, and go to state 35
    REPEAT    shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    CASE      shift, and go to state 39

    compound_stmt  go to state 40
    stmt           go to state 229
    assign_stmt    go to state 42
    proc_stmt      go to state 43
    repeat_stmt    go to state 44
    while_stmt     go to state 45
    for_stmt       go to state 46
    if_stmt        go to state 47
    case_stmt      go to state 48
    left_expr      go to state 49


State 222

   82 case_expr: ID COLON stmt SEMI .

    $default  reduce using rule 82 (case_expr)


State 223

   81 case_expr: const_value COLON stmt SEMI .

    $default  reduce using rule 81 (case_expr)


State 224

   23 array_type_decl: ARRAY LB array_range RB OF type_decl .

    $default  reduce using rule 23 (array_type_decl)


State 225

   46 para_decl_list: para_decl_list SEMI para_type_list .

    $default  reduce using rule 46 (para_decl_list)


State 226

   48 para_type_list: var_para_list COLON type_decl .

    $default  reduce using rule 48 (para_type_list)


State 227

   41 function_decl: FUNCTION ID parameters COLON simple_type_decl SEMI . routine_head routine_body SEMI

    CONST  shift, and go to state 6

    $default  reduce using rule 4 (const_part)

    routine_head  go to state 230
    const_part    go to state 8


State 228

   42 procedure_decl: PROCEDURE ID parameters SEMI routine_head routine_body . SEMI

    SEMI  shift, and go to state 231


State 229

   72 for_stmt: FOR ID ASSIGN expression direction expression DO stmt .

    $default  reduce using rule 72 (for_stmt)


State 230

   41 function_decl: FUNCTION ID parameters COLON simple_type_decl SEMI routine_head . routine_body SEMI

    PBEGIN  shift, and go to state 11

    routine_body   go to state 232
    compound_stmt  go to state 13


State 231

   42 procedure_decl: PROCEDURE ID parameters SEMI routine_head routine_body SEMI .

    $default  reduce using rule 42 (procedure_decl)


State 232

   41 function_decl: FUNCTION ID parameters COLON simple_type_decl SEMI routine_head routine_body . SEMI

    SEMI  shift, and go to state 233


State 233

   41 function_decl: FUNCTION ID parameters COLON simple_type_decl SEMI routine_head routine_body SEMI .

    $default  reduce using rule 41 (function_decl)
